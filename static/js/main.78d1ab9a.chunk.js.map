{"version":3,"sources":["components/TextInput.js","components/UploadImage.js","components/DownloadImage.js","components/TextOption.js","components/assets/intro.png","App.js","index.js"],"names":["TextInput","className","onChange","this","props","type","size","placeholder","Component","UploadImage","accept","id","DownloadImage","onClick","href","download","TextOption","value","fontSize","App","handleCanvasHref","setState","handleTextChange","e","text","target","handleFontsizeChange","handleCanvasSize","name","width","height","handleImgChange","file","files","fileURL","URL","createObjectURL","img","testDownloadBtn","state","url","canvasRef","current","toDataURL","도지","fontFamily","fontColor","React","createRef","canvas","ctx","getContext","image","Image","src","onload","drawImage","setFont","textBorder","fillStyle","textAlign","textBaseLine","font","lines","split","forEach","line","index","lineWidth","strokeStyle","strokeText","length","fillText","createCanvas","ref","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78d1ab9a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\n\r\nclass TextInput extends Component {\r\n    render() {\r\n        return (\r\n            <input className=\"textInput\"\r\n                onChange={this.props.onChange}\r\n                type=\"text\"\r\n                size=\"40\"\r\n                placeholder=\"Type text here!\" />\r\n        );\r\n    }\r\n};\r\n\r\nexport default TextInput;","import React, { Component } from \"react\";\r\n\r\n\r\nclass UploadImage extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"upload-tab\">\r\n                <input accept=\"image/*\" type='file' id=\"imgInp\"\r\n                    onChange={this.props.onChange}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default UploadImage;","import React, { Component } from \"react\";\r\n\r\n\r\nclass DownloadImage extends Component {\r\n    render() {\r\n        return (\r\n            <a\r\n                onClick={this.props.onClick}\r\n                href={this.props.href}\r\n                className=\"download-button\"\r\n                download=\"sample.png\">\r\n                Download\r\n            </a>\r\n        );\r\n    }\r\n};\r\n\r\nexport default DownloadImage;","import React, { Component } from \"react\";\r\n\r\n\r\nclass TextOption extends Component {\r\n    render() {\r\n        return (\r\n            <input type=\"number\"\r\n                value={this.props.fontSize}\r\n                onChange={this.props.onChange}>\r\n            </input>\r\n        );\r\n    }\r\n};\r\n\r\nexport default TextOption;","export default __webpack_public_path__ + \"static/media/intro.f89c8be8.png\";","import React from 'react';\nimport TextInput from './components/TextInput';\nimport UploadImage from './components/UploadImage';\nimport DownloadImage from './components/DownloadImage';\nimport TextOption from './components/TextOption';\n// import CanvasSize from './components/CanvasSize';\nimport 도지 from './components/assets/intro.png';\nimport './App.css'\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: \"파일을 선택하고 자막을 넣어보세요\",\n      href: \"/\",\n      width: \"500\",\n      height: \"500\",\n      img: 도지,\n\n      fontFamily: 'Nanum Gothic',\n      fontColor: \"White\",\n      fontSize: 30,\n    };\n    this.canvasRef = React.createRef();\n  }\n  handleCanvasHref = href => {\n    this.setState({ href });\n  };\n  handleTextChange = e => {\n    this.setState({ text: e.target.value });\n  };\n  handleFontsizeChange = e => {\n    this.setState({ fontSize: e.target.value });\n  };\n\n  handleCanvasSize = e => {\n    if (e.target.name === \"width\")\n      this.setState({ width: e.target.value })\n    else if (e.target.name === \"height\")\n      this.setState({ height: e.target.value })\n  };\n  handleImgChange = e => {\n    const [file] = e.target.files\n    if (file) {\n      const fileURL = URL.createObjectURL(file)\n      this.setState({ img: fileURL });\n    }\n  };\n  createCanvas() {\n    const canvas = this.canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const { text, img } = this.state;\n    // const { width, height} = state;\n    const image = new Image();\n    image.src = img;\n    image.onload = () => {\n      canvas.width = image.width;\n      canvas.height = image.height;\n      ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n      this.setFont(canvas, text);\n    }\n  }\n  testDownloadBtn = e => {\n    const { href } = this.state;\n    const canvas = this.canvasRef.current;\n    const url = canvas.toDataURL();\n    href !== url && this.handleCanvasHref(url);\n  }\n\n  setFont(canvas, text) {\n    const ctx = canvas.getContext(\"2d\");\n    const { fontFamily, fontSize, fontColor } = this.state;\n    const { textBorder } = 'black';\n\n    ctx.fillStyle = fontColor;\n    ctx.textAlign = 'center';\n    ctx.textBaseLine = 'middle';\n    ctx.font = `normal ${fontSize}px ${fontFamily}`;\n\n    const lines = text.split('\\n');\n    lines.forEach((line, index) => {\n      // ctx.shadowColor = 'black';\n      // ctx.shadowBlur = 10;\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = `${textBorder}`;\n      ctx.strokeText(\n        line,\n        canvas.width / 2,\n        canvas.height - fontSize * (lines.length - index) * 1.5,\n      );\n\n      ctx.fillStyle = fontColor;\n      ctx.fillText(\n        line,\n        canvas.width / 2,\n        canvas.height - fontSize * (lines.length - index) * 1.5,\n      );\n    });\n  };\n  componentDidMount() {\n    this.createCanvas();\n\n  }\n  componentDidUpdate() {\n    this.createCanvas();\n  }\n  render() {\n    return (\n      <div>\n        <h1>자막생성기 BETA</h1>\n        <UploadImage onChange={this.handleImgChange} />\n        <div className=\"canvasTab\">\n          <canvas ref={this.canvasRef} className=\"previewCanvas\" />\n        </div>\n        {/* 기능 구현 예정 (자르기) */}\n        {/* <CanvasSize width={this.state.width} height={this.state.height} onChange={this.handleCanvasSize} /> */}\n        <TextInput onChange={this.handleTextChange} />\n        {/* font 관련 옵션 */}\n        <TextOption fontSize={this.state.fontSize}\n          onChange={this.handleFontsizeChange} />\n        <DownloadImage href={this.state.href}\n          onClick={this.testDownloadBtn} />\n      </div>\n    )\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}