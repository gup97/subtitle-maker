{"version":3,"sources":["components/TextInput.js","components/UploadImage.js","components/DownloadImage.js","components/TextOption.js","components/assets/intro.png","App.js","index.js"],"names":["TextInput","className","onChange","this","props","type","size","placeholder","Component","UploadImage","inputFile","e","file","target","files","imageChange","URL","createObjectURL","accept","id","DownloadImage","inputDownloadBtn","href","handleCanvasHref","url","canvas","current","toDataURL","onClick","download","TextOption","value","fontSize","App","setState","handleTextChange","text","handleFontsizeChange","handleImgChange","fileURL","img","handleCanvasSize","name","width","height","state","도지","fontFamily","fontColor","canvasRef","React","createRef","ctx","getContext","image","Image","src","onload","drawImage","setFont","textBorder","fillStyle","textAlign","textBaseLine","font","lines","split","forEach","line","index","lineWidth","strokeStyle","strokeText","length","fillText","createCanvas","ref","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAgBeA,E,4JAXX,WACI,OACI,uBAAOC,UAAU,YACbC,SAAUC,KAAKC,MAAMF,SACrBG,KAAK,OACLC,KAAK,KACLC,YAAY,wB,GARJC,a,OCqBTC,E,4MAtBXC,UAAY,SAACC,GAAO,IACTC,EADQ,YACAD,EAAEE,OAAOC,MADT,MAEXF,IAGAG,EAFwB,EAAKX,MAArBW,aACQC,IAAIC,gBAAgBL,K,4CAI5C,WACI,OACI,qBAAKX,UAAU,aAAf,SACI,uBACIiB,OAAO,UACPb,KAAK,OACLc,GAAG,SACHjB,SAAUC,KAAKO,kB,GAhBTF,aCqBXY,E,4MApBXC,iBAAmB,SAACV,GAAO,IAAD,EACa,EAAKP,MAAhCkB,EADc,EACdA,KAAMC,EADQ,EACRA,iBAGRC,EAFY,EAAKpB,MAAMqB,OACJC,QACNC,YACnBL,IAASE,GAAOD,EAAiBC,I,4CAErC,WACI,OACI,mBACII,QAASzB,KAAKkB,iBACdC,KAAMnB,KAAKC,MAAMkB,KACjBrB,UAAU,kBACV4B,SAAS,aAJb,0B,GAVgBrB,aCgBbsB,E,4JAbX,WACI,OACI,gCACI,gDACA,uBAAOzB,KAAK,SACR0B,MAAO5B,KAAKC,MAAM4B,SAClB9B,SAAUC,KAAKC,MAAMF,kB,GAPhBM,aCHV,MAA0B,kCCmH1ByB,G,wDA1Gb,WAAY7B,GAAQ,IAAD,8BACjB,cAAMA,IAcRmB,iBAAmB,SAAAD,GACjB,EAAKY,SAAS,CAAEZ,UAhBC,EAkBnBa,iBAAmB,SAAAxB,GACjB,EAAKuB,SAAS,CAAEE,KAAMzB,EAAEE,OAAOkB,SAnBd,EAqBnBM,qBAAuB,SAAA1B,GACrB,EAAKuB,SAAS,CAAEF,SAAUrB,EAAEE,OAAOkB,SAtBlB,EAwBnBO,gBAAkB,SAAAC,GAChB,EAAKL,SAAS,CAAEM,IAAKD,KAzBJ,EA2BnBE,iBAAmB,SAAA9B,GACK,UAAlBA,EAAEE,OAAO6B,KACX,EAAKR,SAAS,CAAES,MAAOhC,EAAEE,OAAOkB,QACP,WAAlBpB,EAAEE,OAAO6B,MAChB,EAAKR,SAAS,CAAEU,OAAQjC,EAAEE,OAAOkB,SA7BnC,EAAKc,MAAQ,CACXT,KAAM,gGACNd,KAAM,IACNqB,MAAO,MACPC,OAAQ,MACRJ,IAAKM,EAELC,WAAY,eACZC,UAAW,QACXhB,SAAU,IAEZ,EAAKiB,UAAYC,IAAMC,YAbN,E,gDAkCnB,WAAgB,IAAD,OACP1B,EAAStB,KAAK8C,UAAUvB,QACxB0B,EAAM3B,EAAO4B,WAAW,MAFjB,EAGSlD,KAAK0C,MAAnBT,EAHK,EAGLA,KAAMI,EAHD,EAGCA,IAERc,EAAQ,IAAIC,MAClBD,EAAME,IAAMhB,EACZc,EAAMG,OAAS,WACbhC,EAAOkB,MAAQW,EAAMX,MACrBlB,EAAOmB,OAASU,EAAMV,OACtBQ,EAAIM,UAAUJ,EAAO,EAAG,EAAG7B,EAAOkB,MAAOlB,EAAOmB,QAChD,EAAKe,QAAQlC,EAAQW,M,qBAGzB,SAAQX,EAAQW,GACd,IAAMgB,EAAM3B,EAAO4B,WAAW,MADV,EAEwBlD,KAAK0C,MAAzCE,EAFY,EAEZA,WAAYf,EAFA,EAEAA,SAAUgB,EAFV,EAEUA,UACtBY,EAAe,QAAfA,WAERR,EAAIS,UAAYb,EAChBI,EAAIU,UAAY,SAChBV,EAAIW,aAAe,SACnBX,EAAIY,KAAJ,iBAAqBhC,EAArB,cAAmCe,GAEnC,IAAMkB,EAAQ7B,EAAK8B,MAAM,MACzBD,EAAME,SAAQ,SAACC,EAAMC,GAGnBjB,EAAIkB,UAAYtC,EAAW,EAC3BoB,EAAImB,YAAJ,UAAqBX,GACrBR,EAAIoB,WACFJ,EACA3C,EAAOkB,MAAQ,EACflB,EAAOmB,OAASZ,GAAYiC,EAAMQ,OAASJ,GAAS,KAGtDjB,EAAIS,UAAYb,EAChBI,EAAIsB,SACFN,EACA3C,EAAOkB,MAAQ,EACflB,EAAOmB,OAASZ,GAAYiC,EAAMQ,OAASJ,GAAS,U,+BAI1D,WACElE,KAAKwE,iB,gCAGP,WACExE,KAAKwE,iB,oBAEP,WACE,OACE,gCACE,qEACA,cAAC,EAAD,CAAa5D,YAAaZ,KAAKmC,kBAC/B,qBAAKrC,UAAU,YAAf,SACE,wBAAQ2E,IAAKzE,KAAK8C,UAAWhD,UAAU,oBAIzC,cAAC,EAAD,CAAWC,SAAUC,KAAKgC,mBAE1B,cAAC,EAAD,CAAYH,SAAU7B,KAAK0C,MAAMb,SAC/B9B,SAAUC,KAAKkC,uBACjB,cAAC,EAAD,CAAef,KAAMnB,KAAK0C,MAAMvB,KAC9BG,OAAQtB,KAAK8C,UACb1B,iBAAkBpB,KAAKoB,0B,GAtGf2B,IAAM1C,YCHxBqE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cf954ad2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\n\r\nclass TextInput extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <input className=\"textInput\"\r\n                onChange={this.props.onChange}\r\n                type=\"text\"\r\n                size=\"40\"\r\n                placeholder=\"Type text here!\" />\r\n        );\r\n    }\r\n};\r\n\r\nexport default TextInput;","import React, { Component } from \"react\";\r\nclass UploadImage extends Component {\r\n    inputFile = (e) => {\r\n        const [file] = e.target.files\r\n        if (file) {\r\n            const { imageChange } = this.props;\r\n            const fileURL = URL.createObjectURL(file)\r\n            imageChange(fileURL);\r\n        }\r\n    };\r\n    render() {\r\n        return (\r\n            <div className=\"upload-tab\">\r\n                <input\r\n                    accept=\"image/*\"\r\n                    type='file'\r\n                    id=\"imgInp\"\r\n                    onChange={this.inputFile}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default UploadImage;","import React, { Component } from \"react\";\r\nclass DownloadImage extends Component {\r\n    inputDownloadBtn = (e) => {\r\n        const { href, handleCanvasHref } = this.props;\r\n        const canvasRef = this.props.canvas;\r\n        const canvas = canvasRef.current;\r\n        const url = canvas.toDataURL();\r\n        href !== url && handleCanvasHref(url);\r\n    };\r\n    render() {\r\n        return (\r\n            <a\r\n                onClick={this.inputDownloadBtn}\r\n                href={this.props.href}\r\n                className=\"download-button\"\r\n                download=\"sample.png\">\r\n                Download\r\n            </a>\r\n        );\r\n    }\r\n};\r\n\r\nexport default DownloadImage;","import React, { Component } from \"react\";\r\n\r\n\r\nclass TextOption extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <span>text size : </span>\r\n                <input type=\"number\"\r\n                    value={this.props.fontSize}\r\n                    onChange={this.props.onChange}>\r\n                </input>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default TextOption;","export default __webpack_public_path__ + \"static/media/intro.f89c8be8.png\";","import React from 'react';\nimport TextInput from './components/TextInput';\nimport UploadImage from './components/UploadImage';\nimport DownloadImage from './components/DownloadImage';\nimport TextOption from './components/TextOption';\n// import CanvasSize from './components/CanvasSize';\nimport 도지 from './components/assets/intro.png';\nimport './App.css'\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: \"파일을 선택하고 자막을 넣어보세요\",\n      href: \"/\",\n      width: \"500\",\n      height: \"500\",\n      img: 도지,\n\n      fontFamily: 'Nanum Gothic',\n      fontColor: \"White\",\n      fontSize: 30,\n    };\n    this.canvasRef = React.createRef();\n  }\n  handleCanvasHref = href => {\n    this.setState({ href });\n  };\n  handleTextChange = e => {\n    this.setState({ text: e.target.value });\n  };\n  handleFontsizeChange = e => {\n    this.setState({ fontSize: e.target.value });\n  };\n  handleImgChange = fileURL => {\n    this.setState({ img: fileURL });\n  };\n  handleCanvasSize = e => {\n    if (e.target.name === \"width\")\n      this.setState({ width: e.target.value })\n    else if (e.target.name === \"height\")\n      this.setState({ height: e.target.value })\n  };\n\n  createCanvas() {\n    const canvas = this.canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const { text, img } = this.state;\n    // const { width, height} = state;\n    const image = new Image();\n    image.src = img;\n    image.onload = () => {\n      canvas.width = image.width;\n      canvas.height = image.height;\n      ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n      this.setFont(canvas, text);\n    }\n  }\n  setFont(canvas, text) {\n    const ctx = canvas.getContext(\"2d\");\n    const { fontFamily, fontSize, fontColor } = this.state;\n    const { textBorder } = 'black';\n\n    ctx.fillStyle = fontColor;\n    ctx.textAlign = 'center';\n    ctx.textBaseLine = 'middle';\n    ctx.font = `normal ${fontSize}px ${fontFamily}`;\n\n    const lines = text.split('\\n');\n    lines.forEach((line, index) => {\n      // ctx.shadowColor = 'black';\n      // ctx.shadowBlur = 10;\n      ctx.lineWidth = fontSize / 6;\n      ctx.strokeStyle = `${textBorder}`;\n      ctx.strokeText(\n        line,\n        canvas.width / 2,\n        canvas.height - fontSize * (lines.length - index) * 1.5,\n      );\n\n      ctx.fillStyle = fontColor;\n      ctx.fillText(\n        line,\n        canvas.width / 2,\n        canvas.height - fontSize * (lines.length - index) * 1.5,\n      );\n    });\n  };\n  componentDidMount() {\n    this.createCanvas();\n\n  }\n  componentDidUpdate() {\n    this.createCanvas();\n  }\n  render() {\n    return (\n      <div>\n        <h1>자막생성기 BETA</h1>\n        <UploadImage imageChange={this.handleImgChange} />\n        <div className=\"canvasTab\">\n          <canvas ref={this.canvasRef} className=\"previewCanvas\" />\n        </div>\n        {/* 기능 구현 예정 (자르기) */}\n        {/* <CanvasSize width={this.state.width} height={this.state.height} onChange={this.handleCanvasSize} /> */}\n        <TextInput onChange={this.handleTextChange} />\n        {/* font 관련 옵션 */}\n        <TextOption fontSize={this.state.fontSize}\n          onChange={this.handleFontsizeChange} />\n        <DownloadImage href={this.state.href}\n          canvas={this.canvasRef}\n          handleCanvasHref={this.handleCanvasHref} />\n      </div>\n    )\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}